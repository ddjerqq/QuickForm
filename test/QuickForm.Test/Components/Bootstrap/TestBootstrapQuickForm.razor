@using QuickForm.Attributes
@using System.ComponentModel.DataAnnotations
@using System.ComponentModel
@inherits BaseTest

@code
{
    [SuppressMessage("ReSharper", "UnusedMember.Local")]
    private enum Enum
    {
        [Display(Name = "🦝")]
        A,

        [Display(Name = "🐶")]
        B,

        [Display(Name = "😺")]
        C,
    }

    [SuppressMessage("ReSharper", "UnusedMember.Local")]
    private class Model
    {
        [Required]
        [Placeholder]
        [DisplayName("Email Address")]
        [EmailAddress]
        [System.ComponentModel.Description("We will never share your email with anyone")]
        [ValidFeedback("looks good!")]
        public string EmailAddress { get; set; } = string.Empty;

        [Required]
        [Placeholder("Enter password...")]
        [DataType(DataType.Password)]
        [RegularExpression(@"^(?=.*[a-z])(?=.*[A-Z]).{8,32}$", ErrorMessage = "Password must have at least 8 characters, one uppercase letter, one lowercase letter...")]
        [System.ComponentModel.Description("We will never share your password with anyone")]
        [ValidFeedback("looks good!")]
        public string Password { get; set; } = string.Empty;

        [Required]
        [System.ComponentModel.Description("Please check me")]
        public bool Checkbox { get; set; }

        [Required]
        [System.ComponentModel.Description("Please select me")]
        public Enum Select { get; set; }

        // [DataType("range")]
        // [System.ComponentModel.DataAnnotations.Range(0, 10)]
        // public int Range { get; set; }
    }

    [Test]
    public void Test()
    {
        var model = new Model();
        BsQuickForm<Model> form = default!;

        var onSubmit = () => form.ValidateAllFields();

        var cut = Render(
            @<text>
                <BsQuickForm @ref="form" Model="model" OnSubmit="@onSubmit"/>
             </text>);

        cut.MarkupMatches(
            @<text>
                <form class="form w-50 mx-auto" novalidate>
                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Email Address
                        </label>
                        <input id:regex="@IdRegex" autofocus="" required="" placeholder="Enter Email Address..." type="email" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your email with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Password
                        </label>
                        <input id:regex="@IdRegex" autofocus required placeholder="Enter password..." type="password" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your password with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3 form-check">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1 form-check-label">
                            Checkbox
                        </label>
                        @* ReSharper disable once Html.AttributeValueNotResolved *@
                        <input id:regex="@IdRegex" autofocus="" required="" role="switch" type="checkbox" class="form-check-input"/>
                        <div class="form-text text-muted">Please check me</div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Select
                        </label>

                        <select id:regex="@IdRegex" autofocus required class="form-control" value="A">
                            <option value="A" selected>🦝</option>
                            <option value="B">🐶</option>
                            <option value="C">😺</option>
                        </select>

                        <div class="form-text text-muted">Please select me</div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    @* <div class="text-start mb-3"> *@
                    @*     <label for:regex="@IdRegex" class="text-info fw-bold mb-1"> *@
                    @*         Range *@
                    @*     </label> *@
                    @* *@
                    @*     <input id:regex="@IdRegex" autofocus required class="form-range" type="range" value="0" min="0" max="10" step="any"/> *@
                    @*     <div class="invalid-feedback fw-bold"></div> *@
                    @* </div> *@

                    <button type="submit" class="btn btn-outline-success w-100">
                        submit
                    </button>
                </form>
             </text>);

        Print(cut);
    }

    [Test]
    public void TestPassingInputComponentThrows()
    {
        var model = new Model();

        Assert.Throws<InvalidOperationException>(() =>
        {
            Render(
                @<text>
                    <BsQuickForm Model="model">
                        <InputTemplate>
                            @context
                        </InputTemplate>
                    </BsQuickForm>
                 </text>);
        });
    }

    [Test]
    public void TestValidateAllFieldsValidatesAllFields()
    {
        var model = new Model();

        var cut = RenderComponent<BsQuickForm<Model>>(parameters => { parameters.Add(p => p.Model, model); });

        cut.MarkupMatches(
            @<text>
                <form class="form w-50 mx-auto" novalidate>
                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Email Address
                        </label>
                        <input id:regex="@IdRegex" autofocus="" required="" placeholder="Enter Email Address..." type="email" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your email with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Password
                        </label>
                        <input id:regex="@IdRegex" autofocus required placeholder="Enter password..." type="password" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your password with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3 form-check">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1 form-check-label">
                            Checkbox
                        </label>
                        @* ReSharper disable once Html.AttributeValueNotResolved *@
                        <input id:regex="@IdRegex" autofocus="" required="" role="switch" type="checkbox" class="form-check-input"/>
                        <div class="form-text text-muted">Please check me</div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Select
                        </label>

                        <select id:regex="@IdRegex" autofocus required class="form-control" value="A">
                            <option value="A" selected>🦝</option>
                            <option value="B">🐶</option>
                            <option value="C">😺</option>
                        </select>

                        <div class="form-text text-muted">Please select me</div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    @* <div class="text-start mb-3"> *@
                    @*     <label for:regex="@IdRegex" class="text-info fw-bold mb-1"> *@
                    @*         Range *@
                    @*     </label> *@
                    @* *@
                    @*     <input id:regex="@IdRegex" autofocus required class="valid form-range" type="range" value="0" min="0" max="10" step="1"/> *@
                    @*     <div class="invalid-feedback fw-bold"></div> *@
                    @* </div> *@

                    <button type="submit" class="btn btn-outline-success w-100">
                        submit
                    </button>
                </form>
             </text>);

        Print(cut);

        var form = cut.Instance;

        form.ValidationCssClassProvider.ValidateAllFields = true;

        cut.MarkupMatches(
            @<text>
                <form class="form w-50 mx-auto" novalidate="">
                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Email Address
                        </label>
                        <input id:regex="@IdRegex" autofocus="" required="" placeholder="Enter Email Address..." type="email" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your email with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Password
                        </label>
                        <input id:regex="@IdRegex" autofocus="" required="" placeholder="Enter password..." type="password" class="form-control" value="">
                        <div class="form-text text-muted">
                            We will never share your password with anyone
                        </div>
                        <div class="valid-feedback fw-bold">
                            looks good!
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3 form-check">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1 form-check-label">
                            Checkbox
                        </label>
                        @* ReSharper disable once Html.AttributeValueNotResolved *@
                        <input id:regex="@IdRegex" autofocus="" required="" role="switch" type="checkbox" class="form-check-input">
                        <div class="form-text text-muted">
                            Please check me
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <div class="text-start mb-3">
                        <label for:regex="@IdRegex" class="text-info fw-bold mb-1">
                            Select
                        </label>
                        <select id:regex="@IdRegex" autofocus="" required="" class="form-control" value="A">
                            <option value="A" selected>🦝</option>
                            <option value="B">🐶</option>
                            <option value="C">😺</option>
                        </select>
                        <div class="form-text text-muted">
                            Please select me
                        </div>
                        <div class="invalid-feedback fw-bold"></div>
                    </div>

                    <button type="submit" class="btn btn-outline-success w-100">
                        submit
                    </button>
                </form>
             </text>);

        Print(cut);
    }
}